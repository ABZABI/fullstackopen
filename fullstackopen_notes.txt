JAVASCRIPT
==========
Node.js is a JavaScript runtime environment based on Google's    Chrome V8 JavaScript engine and works practically anywhere - from servers to mobile phones.

Arrays
-------
 -  The contents of the array can be modified even though it is defined as a const. 
 -  Because the array is an object, the variable always points to the same object. However, the content of the array changes as new items are added to it.

- One way of iterating through the items of the array is using 'forEach' as seen in the example. forEach receives a function defined using the arrow syntax as a parameter.
ex. const t = [1, -1, 3]
    t.forEach(value => {
        console.log(value)  // numbers 1, -1, 3, 5 are printed, each on its own line
    })      

-   When using React, techniques from functional programming are often used. One characteristic of the functional programming paradigm is the use of immutable data structures.

- In React code, it is preferable to use the method 'concat' to 'push()', which creates a new array with the added item. This ensures the original array remains unchanged.
ex. const t = [1, -1, 3]

    const t2 = t.concat(5)  // creates new array

    console.log(t)  // [1, -1, 3] is printed
    console.log(t2) // [1, -1, 3, 5] is printed

- The method call t.concat(5) does not add a new item to the old array but returns a new array which, besides containing the items of the old array, also contains the new item.

-   Individual items of an array are easy to assign to variables with the help of the destructuring assignment.
ex. const t = [1, 2, 3, 4, 5]

    const [first, second, ...rest] = t

    console.log(first, second)  // 1, 2 is printed
    console.log(rest)          // [3, 4, 5] is printed

Objects
--------
-   The values of the properties can be of any type, like integers, strings, arrays, objects...

-   The properties of an object are referenced by using the "dot" notation, or by using brackets

-   You can also add properties to an object on the fly by either using dot notation or brackets

Functions
---------
-   There are two ways to reference the function; 
    * one is giving a name in a function declaration.
    ex. function product(a, b) {
            return a * b
        }

        const result = product(2, 6)
        // result is now 12

    * The other way to define the function is by using a function expression. In this case, there is no need to give the function a name and the definition may reside among the rest of the code
    ex. const average = function(a, b) {
            return (a + b) / 2
        }

        const result = average(2, 5)
        // result is now 3.5